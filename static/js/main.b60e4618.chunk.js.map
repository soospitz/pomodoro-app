{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","seconds","setSeconds","minutes","setMinutes","pause","setPause","start","setStart","breaks","setBreaks","shortBreaks","setShortBreaks","longBreaks","setLongBreaks","reset","setReset","interval","useRef","useEffect","current","setInterval","clearInterval","durationProp","colorProp","className","onClick","prevKey","style","backgroundColor","fontWeight","isPlaying","duration","colors","trailColor","size","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b60e4618.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\nimport './App.css';\n\nfunction App() {\n\tconst [seconds, setSeconds] = useState(0);\n\tconst [minutes, setMinutes] = useState(0);\n\tconst [pause, setPause] = useState(true);\n\tconst [start, setStart] = useState(false);\n\tconst [breaks, setBreaks] = useState(false);\n\tconst [shortBreaks, setShortBreaks] = useState(false);\n\tconst [longBreaks, setLongBreaks] = useState(false);\n\tconst [reset, setReset] = useState(0);\n\n\tconst handleClick = () => {\n\t\tconsole.log('handle clicked');\n\t\tif (start === false) {\n\t\t\tif (shortBreaks === false && longBreaks === false) {\n\t\t\t\tsetMinutes(25);\n\t\t\t}\n\t\t\tsetStart(true);\n\t\t}\n\t\tsetPause(!pause);\n\n\t\tconsole.log(pause, 'pause');\n\t};\n\tconst handleReset = () => {\n\t\tsetMinutes(25);\n\t\tsetSeconds(0);\n\t\tsetStart(false);\n\t\tsetPause(true);\n\t\tsetReset((prevKey) => prevKey + 1);\n\t};\n\n\tvar interval = useRef();\n\tuseEffect(() => {\n\t\tif (pause === false) {\n\t\t\tinterval.current = setInterval(() => {\n\t\t\t\tif (seconds > 0) {\n\t\t\t\t\tsetSeconds(seconds - 1);\n\t\t\t\t}\n\t\t\t\tif (seconds === 0) {\n\t\t\t\t\tif (minutes === 0) {\n\t\t\t\t\t\tclearInterval(interval.current);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetMinutes(minutes - 1);\n\t\t\t\t\t\tsetSeconds(59);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (minutes === 0 && seconds === 0) {\n\t\t\t\t\tif (breaks) {\n\t\t\t\t\t\tsetMinutes(25);\n\t\t\t\t\t\tsetBreaks(false);\n\t\t\t\t\t\tsetShortBreaks(false);\n\t\t\t\t\t\tsetLongBreaks(false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetMinutes(5);\n\t\t\t\t\t\tsetBreaks(true);\n\t\t\t\t\t\tsetShortBreaks(true);\n\t\t\t\t\t\tsetLongBreaks(false);\n\t\t\t\t\t}\n\t\t\t\t\tsetStart(true);\n\t\t\t\t\tsetPause(true);\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t}\n\n\t\treturn () => {\n\t\t\tclearInterval(interval.current);\n\t\t};\n\t});\n\n\tconst durationProp = shortBreaks ? 375 : longBreaks ? 1125 : 1875;\n\tconst colorProp = shortBreaks\n\t\t? [['#A30000', 0.33], ['#F7B801', 0.33], ['#004777']]\n\t\t: longBreaks\n\t\t? [['#F7B801', 0.33], ['#A30000', 0.33], ['#F7B801']]\n\t\t: [['#004777', 0.33], ['#F7B801', 0.33], ['#A30000']];\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"container\">\n\t\t\t\t<h1>Pomodoro</h1>\n\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetMinutes(25);\n\t\t\t\t\t\t\tsetSeconds(0);\n\t\t\t\t\t\t\tsetPause(true);\n\t\t\t\t\t\t\tsetShortBreaks(false);\n\t\t\t\t\t\t\tsetLongBreaks(false);\n\t\t\t\t\t\t\tsetReset((prevKey) => prevKey + 1);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t!shortBreaks && !longBreaks\n\t\t\t\t\t\t\t\t? { backgroundColor: '#1d1d1d', fontWeight: 'bold' }\n\t\t\t\t\t\t\t\t: { backgroundColor: '#131313' }\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tPomodoro\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetMinutes(5);\n\t\t\t\t\t\t\tsetSeconds(0);\n\t\t\t\t\t\t\tsetPause(true);\n\t\t\t\t\t\t\tsetShortBreaks(true);\n\t\t\t\t\t\t\tsetLongBreaks(false);\n\t\t\t\t\t\t\tsetReset((prevKey) => prevKey + 1);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\tshortBreaks\n\t\t\t\t\t\t\t\t? { backgroundColor: '#1d1d1d', fontWeight: 'bold' }\n\t\t\t\t\t\t\t\t: { backgroundColor: '#131313' }\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tShort Break\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetMinutes(15);\n\t\t\t\t\t\t\tsetSeconds(0);\n\t\t\t\t\t\t\tsetPause(true);\n\t\t\t\t\t\t\tsetShortBreaks(false);\n\t\t\t\t\t\t\tsetLongBreaks(true);\n\t\t\t\t\t\t\tsetReset((prevKey) => prevKey + 1);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\tlongBreaks\n\t\t\t\t\t\t\t\t? { backgroundColor: '#1d1d1d', fontWeight: 'bold' }\n\t\t\t\t\t\t\t\t: { backgroundColor: '#131313' }\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\tLong Break\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"circle\">\n\t\t\t\t\t<CountdownCircleTimer\n\t\t\t\t\t\tkey={reset}\n\t\t\t\t\t\tisPlaying={start && !pause ? true : false}\n\t\t\t\t\t\tduration={durationProp}\n\t\t\t\t\t\tcolors={colorProp}\n\t\t\t\t\t\ttrailColor={'#333'}\n\t\t\t\t\t\tsize={300}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"time\">\n\t\t\t\t\t\t\t{minutes < 10 ? `0${minutes}` : minutes}:{seconds < 10 ? `0${seconds}` : seconds}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</CountdownCircleTimer>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"buttons-bottom\">\n\t\t\t\t\t<div className=\"button\" onClick={handleClick}>\n\t\t\t\t\t\t{pause ? 'START' : 'PAUSE'}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"button\" onClick={handleReset}>\n\t\t\t\t\t\tRESET\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}